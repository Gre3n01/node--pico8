pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
-- node.p8
-- base game: node in the lobby

-- a game of rooms, keys, doors, mobs, items,
-- no health, if death then player is peanalized in death room or grave for a period of time then back to lobby
-- lobby is always start of game, we will continually add to game by adding more rooms until no more space is allowed 
-- we will add items, puzzles and mobs as we go. the object of game is to find a new node, found in the last room before token count has been reached.

--==[ constants ]==--
-- wall sprite numbers
-- player can not move through these wall sprites - it will block player
wall_sprites = {64,65,66,80,81,82,96,97,98}

-- map chunk for lobby
lobby_x1, lobby_y1 = 0, 0
lobby_x2, lobby_y2 = 12, 5

-- room ids
room_lobby = 1

--==[ global variables ]==--
roomid = room_lobby
room_name = "lobby"
room_name_timer = 0

-- room objects
current_objects = {}

-- player object
node = {}


--==[ room data table ]==--
--[[
 each room is defined here with:
  - name: short display name
  - map_x1, map_y1, map_x2, map_y2: map chunk to draw for this room
  - start_x, start_y: player start tile (not pixels)
  - objects: list of objects in this room (mobs, keys, etc)
 add new rooms by adding new entries to this table.
--]]
rooms = {
 [1] = {
  name="lobby",
  map_x1=0, map_y1=0, map_x2=12, map_y2=5,
  start_x=2, start_y=2,
  objects={
   {type="door", x=12, y=2, dest_room=120, dest_x=1, dest_y=2, locked=false}
   -- other objects...
  }
 }, -- <--- comma added here

 [120] = {
  name="library",
  map_x1=16, map_y1=0, map_x2=28, map_y2=5,
  start_x=3, start_y=2,
  objects={
   {type="mob", x=5, y=3},
   {type="mob", x=8, y=4},
   {type="key", x=7, y=2, hidden=true},
   {type="book", x=6, y=2}
  }
 } -- <--- no comma needed after last room
}
-- end of rooms table fix


--==[ common functions ]==--

-- check if a sprite is a wall
function is_wall(tile)
 for i=1,#wall_sprites do
  if tile == wall_sprites[i] then
   return true
  end
 end
 return false
end

-- display the room name for a short time
function show_room_name(name)
 room_name = name
 room_name_timer = 120 -- 2 seconds at 60fps
 sfx(0) -- play "enter room" sound
end

--==[ room loading function ]==--
--[[
 loads a room by id:
  - sets the current room id
  - updates the map chunk variables
  - moves the player to the room's start position
  - loads the room's objects into current_objects
  - plays the enter room sound and displays the room name
 call this function whenever the player enters a new room.
--]]
function load_room(id)
 local r = rooms[id]
 if not r then
  printh("room "..id.." not found!")
  return
 end
 roomid = id
 -- set map chunk for this room
 lobby_x1, lobby_y1 = r.map_x1, r.map_y1
 lobby_x2, lobby_y2 = r.map_x2, r.map_y2
 -- move player to room's start tile (convert to pixels)
 node.x = r.start_x * 8
 node.y = r.start_y * 8
 -- load objects for this room
 current_objects = {}
 for o in all(r.objects) do
  add(current_objects, o)
 end
 -- play sound and show room name
 show_room_name(r.name)
end


--==[ character creation ]==--

function create_node()
 node = {
  x = 2*8, -- start at map tile x=2 (pixels)
  y = 2*8, -- start at map tile y=2 (pixels)
  spr = 1, -- sprite number
  spd = 2, -- movement speed (pixels per frame)
  w = 8,   -- width
  h = 8    -- height
 }
end

--==[ character movement ]==--

function move_node()
 local dx, dy = 0, 0

 -- arrow keys and controller
 if btn(0) then dx = dx - 1 end -- left
 if btn(1) then dx = dx + 1 end -- right
 if btn(2) then dy = dy - 1 end -- up
 if btn(3) then dy = dy + 1 end -- down

 -- wasd keys (keyboard, continuous)
 if stat(34, 97) then dx = dx - 1 end   -- 'a'
 if stat(34,100) then dx = dx + 1 end   -- 'd'
 if stat(34,119) then dy = dy - 1 end   -- 'w'
 if stat(34,115) then dy = dy + 1 end   -- 's'

 -- normalize diagonal movement
 if dx ~= 0 and dy ~= 0 then
  dx *= 0.7071
  dy *= 0.7071
 end

 try_move_node(dx * node.spd, dy * node.spd)
end

-- check for wall collision and move if possible
function try_move_node(dx, dy)
 local new_x = node.x + dx
 local new_y = node.y + dy

 -- check all four corners for wall collision
 if not is_solid(new_x, new_y) and
    not is_solid(new_x+node.w-1, new_y) and
    not is_solid(new_x, new_y+node.h-1) and
    not is_solid(new_x+node.w-1, new_y+node.h-1) then
  node.x = new_x
  node.y = new_y
 end
end

-- check if a pixel position is solid (wall)
function is_solid(px, py)
 local tx = flr(px/8)
 local ty = flr(py/8)
 local tile = mget(tx, ty)
 return is_wall(tile)
end

--==[ room management ]==--

--function get_room_name(id)
-- if id == 1 then return "lobby" end
-- -- add more rooms here later
-- return "???"
--end

--==[ pico-8 builtins ]==--

function _init()
 create_node()
 load_room(roomid) -- loads the first room and its objects
end

function _update()
 move_node()

 -- room name timer
 if room_name_timer > 0 then
  room_name_timer -= 1
 end

 -- check for object interactions
 for o in all(current_objects) do
  -- check if node is on the same tile as an object
  if flr(node.x/8) == o.x and flr(node.y/8) == o.y then
   if o.type == "key" and not o.hidden then
    -- pick up key (remove from room)
    del(current_objects, o)
    sfx(1) -- play pickup sound
    -- you can set a flag here to unlock a door, etc.
   elseif o.type == "door" and not o.locked then
    -- check if player presses "up" or "w" to enter door
    if btnp(2) or stat(34,119) then
     load_room(o.dest_room)
     -- optionally, set node position if door specifies
     if o.dest_x and o.dest_y then
      node.x = o.dest_x * 8
      node.y = o.dest_y * 8
     end
    end
   end
   -- add more interactions for other object types as needed
  end
 end
end

function _draw()
 cls()

 -- draw the map (lobby only for now)
 map(lobby_x1, lobby_y1, 0, 0, lobby_x2-lobby_x1+1, lobby_y2-lobby_y1+1)

 -- draw objects in the current room
 for o in all(current_objects) do
  -- draw each object type with correct sprite
  if o.type == "mob" then
   spr(17, o.x*8, o.y*8) -- firebug (change to 19 for firenode if needed)
  elseif o.type == "key" then
   if not o.hidden then
    spr(68, o.x*8, o.y*8) -- key sprite
   end
  elseif o.type == "book" then
   spr(69, o.x*8, o.y*8) -- book sprite (choose your sprite)
  elseif o.type == "door" then
   spr(67, o.x*8, o.y*8) -- door sprite
  end
 end
 -- end of object drawing fix

 -- draw node   -node is the player
 spr(node.spr, node.x, node.y)

 -- draw room name if timer > 0
 if room_name_timer > 0 then
  rectfill(32, 2, 96, 14, 0)
  print(room_name, 40, 6, 7)
 end
end

--==[ end of base game ]==--
-- add new features below this line!
__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000bb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0070070000bbbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000bbbbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111000000000007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111000000000006600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111080000800505607000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111100e00e000600006000009000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
111111110e0880e0000dd00000099900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111000ee000000550000099aa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000009999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000999990000090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000009999990000099000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000dddddddddddddddddd00009999590000090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000dddddddddddddddddd00009999990000090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000dd55555555555555dd00000999990000444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000dd00000000000000dd00009999990004000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000dd00000000000000dd00000000000000444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000dd00000000000000dd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000dd00000000000000dd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000dd00000000000000dd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000dd00000000000000dd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000dd00000000000000dd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000dd00000000000000dd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000dd00000000000000dd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000dd00000000000000dd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000dd00000000000000dd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000dd00000000000000dd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000dd00000000000000dd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000dddddddddddddddddd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000dddddddddddddddddd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00055555555555555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00999000009990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
099a9900009a9000000cc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
009990000099900000cccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00090000000000000cccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
4041414141414141414141414200404141414141414142000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5000001000001010100000005200500010101010100052000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5000101010101010101010005200501010101010100052000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5000101010101010101010005200501010101010100052000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5000001010000000101010005200500010101010100052000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6061616161616161616161616200606161616161616162000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000500000b0500f050130501705000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000800002f05033050360500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00080000120500f0500c0500605006050060500605000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
